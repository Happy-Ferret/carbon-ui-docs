# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# https://atom.io/docs/latest/using-atom-basic-customization#cson

'.source.js':
  'React stateless component':
    'prefix': 'rscomp'
    'body': """
      import React from 'react'
      import { View } from 'react-native-universal'

      const $1 = () =>
        <View
          style={styles.base}>
        </View>

      $1.propTypes = {

      }

      export default $1

      const styles = {
        base: {}
      }
    """
  'React component':
    'prefix': 'rcomp'
    'body': """
      import React, { Component, PropTypes } from 'react'
      import { View } from 'react-native-universal'

      class $1 extends Component {
        render() {
          return (
            <View style={styles.base}>
            </View>
          )
        }
      }

      $1.propTypes = {

      }

      export default $1

      const styles = {
        base: {},
      }
  """
  'Animated component definition':
    'prefix': 'cac'
    'body': """
      const Animated$1 = Animated.createAnimatedComponent($1)
    """
  'Styles full width':
    'prefix': 'sfw',
    'body': """
      position: 'absolute',
      left: 0,
      right: 0,
      top: 0,
      bottom: 0,
    """
  'PropTypes style':
    'prefix': 'ptsy',
    'body': """
      style: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),
    """
